{"ast":null,"code":"import axios from \"axios\";\nconst CHECK_REQUEST = \"CHECK_REQUEST\";\nconst CHECK_SUCCESS = \"CHECK_SUCCESS\";\nconst CHECK_FAIL = \"CHECK_FAIL\";\nconst checkUrl = url => async dispatch => {\n  dispatch({\n    type: CHECK_REQUEST,\n    payload: null\n  });\n  try {\n    const response = await axios.post(\"answer\", {\n      url\n    });\n    dispatch({\n      type: CHECK_SUCCESS,\n      payload: response.data\n    });\n  } catch (error) {\n    dispatch({\n      type: CHECK_FAIL,\n      payload: error.response.data\n    });\n    alert(error.response.data.message);\n  }\n};\nexport default checkUrl;","map":{"version":3,"names":["axios","CHECK_REQUEST","CHECK_SUCCESS","CHECK_FAIL","checkUrl","url","dispatch","type","payload","response","post","data","error","alert","message"],"sources":["D:/Workspace/DO AN TOT NGHIEP/Fake-News-Article-2024/Front-End/src/redux/actions/checkAction.js"],"sourcesContent":["import axios from \"axios\";\nconst CHECK_REQUEST = \"CHECK_REQUEST\";\nconst CHECK_SUCCESS = \"CHECK_SUCCESS\";\nconst CHECK_FAIL = \"CHECK_FAIL\";\n\nconst checkUrl = (url) => async (dispatch) => {\n  dispatch({\n    type: CHECK_REQUEST,\n    payload: null,\n  });\n\n  try {\n    const response = await axios.post(\"answer\", {\n      url,\n    });\n    dispatch({\n      type: CHECK_SUCCESS,\n      payload: response.data,\n    });\n  } catch (error) {\n    dispatch({\n      type: CHECK_FAIL,\n      payload: error.response.data,\n    });\n\n    alert(error.response.data.message);\n  }\n};\n\nexport default checkUrl;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,MAAMC,aAAa,GAAG,eAAe;AACrC,MAAMC,aAAa,GAAG,eAAe;AACrC,MAAMC,UAAU,GAAG,YAAY;AAE/B,MAAMC,QAAQ,GAAIC,GAAG,IAAK,MAAOC,QAAQ,IAAK;EAC5CA,QAAQ,CAAC;IACPC,IAAI,EAAEN,aAAa;IACnBO,OAAO,EAAE;EACX,CAAC,CAAC;EAEF,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,IAAI,CAAC,QAAQ,EAAE;MAC1CL;IACF,CAAC,CAAC;IACFC,QAAQ,CAAC;MACPC,IAAI,EAAEL,aAAa;MACnBM,OAAO,EAAEC,QAAQ,CAACE;IACpB,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdN,QAAQ,CAAC;MACPC,IAAI,EAAEJ,UAAU;MAChBK,OAAO,EAAEI,KAAK,CAACH,QAAQ,CAACE;IAC1B,CAAC,CAAC;IAEFE,KAAK,CAACD,KAAK,CAACH,QAAQ,CAACE,IAAI,CAACG,OAAO,CAAC;EACpC;AACF,CAAC;AAED,eAAeV,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}